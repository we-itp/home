{"version":3,"sources":["components/NavItem.js","constants/text.js","constants/constants.js","components/About.js","components/Contact.js","constants/events.js","components/Events.js","components/Home.js","components/Resources.js","components/App.js","serviceWorker.js","index.js"],"names":["NavItem","render","className","props","navItem","toLowerCase","isExpanded","React","Component","ContactText","HomeText","text","AboutText","ResourcesText","title","Pages","About","componentDidUpdate","prevProps","prevState","state","scroll","expand","setState","renderAbout","map","renderText","renderNavItem","onClick","idx","key","offsetTop","aboutEl","current","window","scrollTo","top","behavior","createRef","ref","this","Contact","onEnter","ev","which","sendEmail","onInput","target","dataset","type","value","renderBottom","renderContact","emailInputEl","data-type","placeholder","messageInputEl","onKeyDown","console","log","email","message","contactEl","EventsList","date","time","link","photo","Events","renderEvent","event","alt","src","href","renderEvents","eventsEl","Home","renderSubText","Resources","renderResources","resourcesEl","App","data-value","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"8WAIqBA,G,wNACjBC,OAAS,kBACL,yBAAKC,UAAS,mBAAc,EAAKC,MAAMC,QAAQC,gBAC3C,yBAAKH,UAAU,YAAY,EAAKC,MAAMG,WAAa,IAAM,KACxD,EAAKH,MAAMC,U,YAJaG,IAAMC,YCHrCC,EAAc,CAChB,yEACA,sJAGEC,EAAW,CACb,CACI,CACIC,KAAK,wIACLT,UAAW,KAGnB,CACI,CACIS,KAAK,qGACLT,UAAW,oBAEf,CACIS,KAAK,oMACLT,UAAW,IAEf,CACIS,KAAK,0MACLT,UAAW,MAKjBU,EACF,CAAC,4JAAD,opBAQEC,EAAgB,CAClB,CACI,CACIC,MAAO,sBACPH,KAAM,+HAEV,CACIG,MAAO,mBACPH,KAAM,+HAEV,CACIG,MAAO,iBACPH,KAAM,gIAGd,CACI,CACIG,MAAO,oCACPH,KAAM,gIAEV,CACIG,MAAO,oCACPH,KAAM,iIC5DLI,EACH,OADGA,EAEF,QAFEA,EAGD,SAHCA,EAIE,YAJFA,EAKA,UCEQC,E,kDACjB,WAAYb,GAAQ,IAAD,8BACf,cAAMA,IASVc,mBAAqB,SAACC,EAAWC,IACxBA,EAAUb,YAAc,EAAKc,MAAMd,YACpC,EAAKe,UAZM,EAgBnBC,OAAS,WACL,EAAKC,SAAS,CACVjB,YAAa,EAAKc,MAAMd,cAlBb,EAsBnBkB,YAAc,kBACV,yBAAKtB,UAAU,mBACVU,EAAUa,IAAI,EAAKC,cAxBT,EA4BnBC,cAAgB,kBACZ,yBAAKC,QAAS,EAAKN,QACf,kBAAC,EAAD,CACIlB,QAASW,EACTT,WAAY,EAAKc,MAAMd,eAhChB,EAqCnBoB,WAAa,SAACf,EAAMkB,GAAP,OACT,yBAAK3B,UAAU,aAAa4B,IAAG,UAAKnB,EAAL,YAAakB,IAAQlB,IAtCrC,EAyCnBU,OAAS,WAAO,IACHU,EAAa,EAAKC,QAAQC,QAA1BF,UACLG,OAAOC,SAAS,CACZC,IAAKL,EACLM,SAAU,YA1ClB,EAAKjB,MAAQ,CACTd,YAAY,GAGhB,EAAK0B,QAAUzB,IAAM+B,YAPN,E,qDAkDf,OACI,yBAAKC,IAAKC,KAAKR,QAAS9B,UAAU,QAC7BsC,KAAKb,gBACLa,KAAKpB,MAAMd,WAAakC,KAAKhB,cAAgB,U,GAtD3BjB,IAAMC,W,OCGpBiC,G,wDACjB,WAAYtC,GAAQ,IAAD,8BACf,cAAMA,IAaVc,mBAAqB,SAACC,EAAWC,IACxBA,EAAUb,YAAc,EAAKc,MAAMd,YACpC,EAAKe,UAhBM,EAoBnBC,OAAS,WACL,EAAKC,SAAS,CACVjB,YAAa,EAAKc,MAAMd,cAtBb,EA0BnBoC,QAAU,SAAAC,GA7BK,KA8BPA,EAAGC,OAAsB,EAAKC,aA3BnB,EA8BnBC,QAAU,SAAAH,GACN,EAAKpB,SAAL,eACKoB,EAAGI,OAAOC,QAAQC,KAAON,EAAGI,OAAOG,SAhCzB,EAoCnBC,aAAe,kBACX,yBAAKjD,UAAU,oBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,SACf,yBAAKA,UAAU,aAAf,gBAxCW,EA6CnBkD,cAAgB,kBACZ,yBAAKlD,UAAU,qBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,aAAf,YACA,yBAAKA,UAAU,gBACVO,EAAYgB,IAAI,EAAKC,cAG9B,yBAAKxB,UAAU,WACX,2BACIqC,IAAK,EAAKc,aACVnD,UAAU,gBACV4C,QAAS,EAAKA,QACdQ,YAAU,QACVC,YAAY,UAChB,2BACIhB,IAAK,EAAKiB,eACVtD,UAAU,gBACV4C,QAAS,EAAKA,QACdW,UAAW,EAAKf,QAChBY,YAAU,UACVC,YAAY,YAChB,4BAAQrD,UAAU,iBAAiB0B,QAAS,EAAKiB,WAAjD,WAnEO,EAwEnBlB,cAAgB,kBACZ,yBAAKC,QAAS,EAAKN,QACf,kBAAC,EAAD,CACIlB,QAASW,EACTT,WAAY,EAAKc,MAAMd,eA5EhB,EAiFnBoB,WAAa,SAAAf,GAAI,OACb,yBAAKmB,IAAG,UAAKnB,GAAQT,UAAU,iBAC1BS,IAnFU,EAuFnBkC,UAAY,WACRa,QAAQC,IAAI,EAAKvC,MAAMwC,MAAO,EAAKxC,MAAMyC,SACzC,EAAKR,aAAapB,QAAQiB,MAAQ,GAClC,EAAKM,eAAevB,QAAQiB,MAAQ,IA1FrB,EA6FnB7B,OAAS,WAAO,IACPU,EAAa,EAAK+B,UAAU7B,QAA5BF,UACLG,OAAOC,SAAS,CACZC,IAAKL,EACLM,SAAU,YA9Fd,EAAKjB,MAAQ,CACTwC,MAAO,GACPC,QAAS,GACTvD,YAAY,GAGhB,EAAKwD,UAAYvD,IAAM+B,YACvB,EAAKe,aAAe9C,IAAM+B,YAC1B,EAAKkB,eAAiBjD,IAAM+B,YAXb,E,qDAsGf,OACI,yBAAKC,IAAKC,KAAKsB,UAAW5D,UAAU,QAC/BsC,KAAKb,gBACLa,KAAKpB,MAAMd,WAAakC,KAAKY,gBAAkB,KAC/CZ,KAAKpB,MAAMd,WAAakC,KAAKW,eAAiB,U,GA3G1B5C,IAAMC,YCVrCuD,G,MAAa,CACf,CACIjD,MAAO,wBACPkD,KAAM,eACNC,KAAM,aACNC,KAAM,GACNC,MAAO,+DAEX,CACIrD,MAAO,wBACPkD,KAAM,eACNC,KAAM,aACNC,KAAM,GACNC,MAAO,+DAEX,CACIrD,MAAO,wBACPkD,KAAM,eACNC,KAAM,aACNC,KAAM,GACNC,MAAO,+DAEX,CACIrD,MAAO,wBACPkD,KAAM,eACNC,KAAM,aACNC,KAAM,GACNC,MAAO,iECnBMC,E,kDACjB,WAAYjE,GAAQ,IAAD,8BACf,cAAMA,IAQVc,mBAAqB,SAACC,EAAWC,IACxBA,EAAUb,YAAc,EAAKc,MAAMd,YACpC,EAAKe,UAXM,EAenBC,OAAS,WACL,EAAKC,SAAS,CACVjB,YAAa,EAAKc,MAAMd,cAjBb,EAqBnB+D,YAAc,SAACC,EAAOzC,GAAR,OACV,yBAAKC,IAAG,UAAKwC,EAAMxD,MAAX,YAAoBe,GAAO3B,UAAU,mBACzC,yBAAKqE,IAAI,kBAAkBC,IAAKF,EAAMH,QACtC,yBAAKjE,UAAU,cAAcoE,EAAMxD,OACnC,yBAAKZ,UAAU,cACVoE,EAAMN,KADX,MACoBM,EAAML,MAE1B,yBAAK/D,UAAU,QAAO,uBAAGuE,KAAMH,EAAMJ,MAAf,eA5BX,EAgCnBQ,aAAe,kBACX,yBAAKxE,UAAU,oBACV6D,EAAWtC,IAAI,EAAK4C,eAlCV,EAsCnB1C,cAAgB,kBACZ,yBAAKC,QAAS,EAAKN,QACf,kBAAC,EAAD,CACIlB,QAASW,EACTT,WAAY,EAAKc,MAAMd,eA1ChB,EA+CnBe,OAAS,WAAO,IACPU,EAAa,EAAK4C,SAAS1C,QAA3BF,UACLG,OAAOC,SAAS,CACZC,IAAKL,EACLM,SAAU,YAjDd,EAAKjB,MAAQ,CACTd,YAAY,GAGhB,EAAKqE,SAAWpE,IAAM+B,YANP,E,qDAwDf,OACI,yBAAKC,IAAKC,KAAKmC,SAAUzE,UAAU,QAC9BsC,KAAKb,gBACLa,KAAKpB,MAAMd,WAAakC,KAAKkC,eAAiB,U,GA5D3BnE,IAAMC,WCHrBoE,G,kNACjBC,cAAgB,SAAClE,GAAD,OACZ,yBAAKmB,IAAKnB,EAAKA,KAAMT,UAAS,uBAAkBS,EAAKT,YAAcS,EAAKA,O,EAG5Ee,WAAa,SAACf,EAAMkB,GAAP,OACT,yBAAKC,IAAG,eAAUD,GAAO3B,UAAS,iBAAoB,IAAR2B,EAAY,QAAU,WAAalB,EAAKc,IAAI,EAAKoD,iB,uDAI/F,OACI,yBAAK3E,UAAU,QACX,yBAAKA,UAAU,aACVQ,EAASe,IAAIe,KAAKd,kB,GAbLnB,IAAMC,YCEnBsE,G,wDACjB,WAAY3E,GAAQ,IAAD,8BACf,cAAMA,IAQVc,mBAAqB,SAACC,EAAWC,IACxBA,EAAUb,YAAc,EAAKc,MAAMd,YACpC,EAAKe,UAXM,EAenBC,OAAS,WACL,EAAKC,SAAS,CACVjB,YAAa,EAAKc,MAAMd,cAjBb,EAqBnBqB,cAAgB,kBACZ,yBAAKC,QAAS,EAAKN,QACf,kBAAC,EAAD,CACIlB,QAASW,EACTT,WAAY,EAAKc,MAAMd,eAzBhB,EA8BnByE,gBAAkB,kBACd,yBAAK7E,UAAU,uBACVW,EAAcY,IAAI,EAAKC,cAhCb,EAoCnBmD,cAAgB,SAAClE,EAAMkB,GAAP,OACZ,yBAAKC,IAAG,UAAKnB,EAAKG,MAAV,YAAmBe,GAAO3B,UAAU,iBACxC,yBAAKA,UAAU,eAAeS,EAAKG,OACnC,6BAAMH,EAAKA,QAvCA,EA2CnBe,WAAa,SAACf,EAAMkB,GAAP,OACT,yBAAKC,IAAG,yBAAoBD,GAAO3B,UAAS,uBAAkB2B,IAC1D,yBAAK3B,UAAU,aAAqB,IAAR2B,EAAY,wBAA0B,oBACjElB,EAAKc,IAAI,EAAKoD,iBA9CJ,EAkDnBxD,OAAS,WAAO,IACPU,EAAa,EAAKiD,YAAY/C,QAA9BF,UACLG,OAAOC,SAAS,CACZC,IAAKL,EACLM,SAAU,YApDd,EAAKjB,MAAQ,CACTd,YAAY,GAGhB,EAAK0E,YAAczE,IAAM+B,YANV,E,qDA2Df,OACI,yBAAKC,IAAKC,KAAKwC,YAAa9E,UAAU,QACjCsC,KAAKb,gBACLa,KAAKpB,MAAMd,WAAakC,KAAKuC,kBAAoB,U,GA/D3BxE,IAAMC,YCGxByE,E,uKAEjB,OACE,yBAAK/E,UAAU,OACb,yBAAKgF,aAAYnE,EAAYb,UAAU,kBACrC,yBAAKA,UAAU,UAEjB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAXyBK,IAAMC,WCEnB2E,QACW,cAA7BjD,OAAOkD,SAASC,UAEe,UAA7BnD,OAAOkD,SAASC,UAEhBnD,OAAOkD,SAASC,SAASC,MACvB,2DCXNC,IAAStF,OACP,kBAAC,IAAMuF,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxC,QAAQwC,MAAMA,EAAMrC,c","file":"static/js/main.a4fb4bc2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport '../style/NavItem.css'\r\n\r\nexport default class NavItem extends React.Component {\r\n    render = () => (\r\n        <div className={`nav-item ${this.props.navItem.toLowerCase()}`}>\r\n            <div className=\"nav-plus\">{this.props.isExpanded ? '-' : '+'}</div>\r\n            {this.props.navItem}\r\n        </div>\r\n    )\r\n}\r\n","\r\nconst ContactText = [\r\n    'Email us at we.itp@nyu.edu or reach out to any of our current members!',\r\n    'Our current members include: Dawn Sinkowski, Lizzy Chiappini, Simone Salvo, Sydney Meyers, Katie Han, Sue Roh, Na Chen, Christina Dacanay, Ji Park'\r\n]\r\n\r\nconst HomeText = [\r\n    [\r\n        {\r\n            text:     `Wage Equity @ITP is a working group with a shared interest in destigmatizing open conversations around salaries and work experiences.`,\r\n            className: ''\r\n        }\r\n    ],\r\n    [\r\n        {\r\n            text: `Weâ€™ve since begun developing programming and initiatives aligned with these goals and values:`,\r\n            className: 'home-boldsubtext'\r\n        },\r\n        {\r\n            text: `A weekly speaker series that features an invited guest working in an ITP-adjacent industry to share their professional trajectories and offer candid insights based on their personal experiences`,\r\n            className: ''\r\n        },\r\n        {\r\n            text: `A mentorship program for graduating second-years to develop meaningful connections with ITP alumni, supporting a constructive transition from the ITP student community to a broader professional field`,\r\n            className: ''\r\n        }\r\n    ]\r\n]\r\n\r\nconst AboutText = \r\n    [`WE @ITP began over the summer lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.`,\r\n    `Our mission is to lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.`,\r\n    `Explanation about ITP: lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.`,\r\n    `We see ourselves as different from tisch career offices because lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.`,\r\n    `Anyone can join the group! Our current members include: Dawn Sinkowski, Lizzy Chiappini, Simone Salvo, Sydney Meyers, Katie Han, Sue Roh, Na Chen, Christina Dacanay, Ji Park`,\r\n\r\n    ]\r\n\r\nconst ResourcesText = [\r\n    [\r\n        {\r\n            title: 'Tisch Career Center',\r\n            text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\r\n        },\r\n        {\r\n            title: 'Wasserman Center',\r\n            text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\r\n        },\r\n        {\r\n            title: 'Interview Help',\r\n            text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\r\n        }\r\n    ],\r\n    [\r\n        {\r\n            title: 'How to approach wage negotiations',\r\n            text: ' Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\r\n        },\r\n        {\r\n            title: 'How to approach wage negotiations',\r\n            text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\r\n        }\r\n    ]\r\n]\r\n\r\nexport {HomeText, ContactText, AboutText, ResourcesText}","export const Pages = {\r\n    Home: 'Home',\r\n    About: 'About',\r\n    Events: 'Events',\r\n    Resources: 'Resources',\r\n    Contact: 'Contact'\r\n}\r\n","import React from 'react'\r\n\r\nimport '../style/About.css'\r\nimport NavItem from './NavItem'\r\nimport {AboutText} from '../constants/text'\r\nimport { Pages } from '../constants/constants'\r\n\r\nexport default class About extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            isExpanded: false\r\n        }\r\n\r\n        this.aboutEl = React.createRef()\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if (!prevState.isExpanded && this.state.isExpanded) {\r\n            this.scroll()\r\n        }\r\n    }\r\n\r\n    expand = () => {\r\n        this.setState({\r\n            isExpanded: !this.state.isExpanded\r\n        })\r\n    }\r\n\r\n    renderAbout = () => (\r\n        <div className=\"about-container\">\r\n            {AboutText.map(this.renderText)}\r\n        </div>\r\n    )\r\n\r\n    renderNavItem = () => (\r\n        <div onClick={this.expand}>\r\n            <NavItem \r\n                navItem={Pages.About}\r\n                isExpanded={this.state.isExpanded}\r\n            />\r\n        </div>\r\n    )\r\n\r\n    renderText = (text, idx) => (\r\n        <div className=\"about-text\" key={`${text}-${idx}`}>{text}</div>\r\n    )\r\n\r\n    scroll = () => {\r\n            let {offsetTop} = this.aboutEl.current\r\n            window.scrollTo({\r\n                top: offsetTop,\r\n                behavior: 'smooth'\r\n            })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div ref={this.aboutEl} className=\"Page\">\r\n                {this.renderNavItem()}\r\n                {this.state.isExpanded ? this.renderAbout() : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nimport '../style/Contact.css'\r\nimport NavItem from './NavItem'\r\n\r\nimport {ContactText} from '../constants/text'\r\nimport {Pages} from '../constants/constants'\r\n\r\nconst RETURN_KEY = 13\r\n\r\nexport default class Contact extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            email: '',\r\n            message: '',\r\n            isExpanded: false\r\n        }\r\n\r\n        this.contactEl = React.createRef()\r\n        this.emailInputEl = React.createRef()\r\n        this.messageInputEl = React.createRef()\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if (!prevState.isExpanded && this.state.isExpanded) {\r\n            this.scroll()\r\n        }\r\n    }\r\n\r\n    expand = () => {\r\n        this.setState({\r\n            isExpanded: !this.state.isExpanded\r\n        })\r\n    }\r\n\r\n    onEnter = ev => {\r\n        if (ev.which === RETURN_KEY) this.sendEmail()\r\n    }\r\n\r\n    onInput = ev => {\r\n        this.setState({\r\n            [ev.target.dataset.type]: ev.target.value\r\n        })\r\n    }\r\n\r\n    renderBottom = () => (\r\n        <div className=\"bottom-copyright\">\r\n          <div className=\"bottom-container\">\r\n            <div className=\"logo\"></div>\r\n            <div className=\"copyright\">Â© 2020</div>\r\n          </div>\r\n        </div>\r\n      )\r\n\r\n    renderContact = () => (\r\n        <div className=\"contact-container\">\r\n            <div className=\"column0\">\r\n                <div className=\"subheader\">Join Us!</div>\r\n                <div className=\"contact-text\">\r\n                    {ContactText.map(this.renderText)}\r\n                </div>\r\n            </div>\r\n            <div className=\"column1\">\r\n                <input \r\n                    ref={this.emailInputEl} \r\n                    className=\"contact-input\" \r\n                    onInput={this.onInput} \r\n                    data-type=\"email\" \r\n                    placeholder=\"Email\"></input>\r\n                <input \r\n                    ref={this.messageInputEl} \r\n                    className=\"contact-input\" \r\n                    onInput={this.onInput} \r\n                    onKeyDown={this.onEnter} \r\n                    data-type=\"message\" \r\n                    placeholder=\"Message\"></input>\r\n                <button className=\"contact-button\" onClick={this.sendEmail}>Send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    renderNavItem = () => (\r\n        <div onClick={this.expand}>\r\n            <NavItem \r\n                navItem={Pages.Contact}\r\n                isExpanded={this.state.isExpanded}\r\n            />\r\n        </div>\r\n    )\r\n\r\n    renderText = text => (\r\n        <div key={`${text}`} className=\"resource-text\">\r\n            {text}\r\n        </div>\r\n    )\r\n\r\n    sendEmail = () => {\r\n        console.log(this.state.email, this.state.message)\r\n        this.emailInputEl.current.value = ''\r\n        this.messageInputEl.current.value = ''\r\n    }\r\n\r\n    scroll = () => {\r\n        let {offsetTop} = this.contactEl.current\r\n        window.scrollTo({\r\n            top: offsetTop,\r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div ref={this.contactEl} className=\"Page\">\r\n                {this.renderNavItem()}\r\n                {this.state.isExpanded ? this.renderContact() : null}\r\n                {this.state.isExpanded ? this.renderBottom() : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const EventsList = [\r\n    {\r\n        title: 'Megan Bowker, COLLINS',\r\n        date: 'Nov 12, 2020',\r\n        time: '4:30pm EST',\r\n        link: '',\r\n        photo: 'https://sues-website.s3.us-east-2.amazonaws.com/ezgif+1.png'\r\n    },\r\n    {\r\n        title: 'Megan Bowker, COLLINS',\r\n        date: 'Nov 12, 2020',\r\n        time: '4:30pm EST',\r\n        link: '',\r\n        photo: 'https://sues-website.s3.us-east-2.amazonaws.com/ezgif+1.png'\r\n    },\r\n    {\r\n        title: 'Megan Bowker, COLLINS',\r\n        date: 'Nov 12, 2020',\r\n        time: '4:30pm EST',\r\n        link: '',\r\n        photo: 'https://sues-website.s3.us-east-2.amazonaws.com/ezgif+1.png'\r\n    },\r\n    {\r\n        title: 'Megan Bowker, COLLINS',\r\n        date: 'Nov 12, 2020',\r\n        time: '4:30pm EST',\r\n        link: '',\r\n        photo: 'https://sues-website.s3.us-east-2.amazonaws.com/ezgif+1.png'\r\n    }\r\n]\r\n\r\nexport {EventsList}\r\n","import React from 'react'\r\n\r\nimport '../style/Events.css'\r\nimport NavItem from './NavItem'\r\n\r\nimport {EventsList} from '../constants/events'\r\nimport {Pages} from '../constants/constants'\r\n\r\nexport default class Events extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isExpanded: false\r\n        }\r\n\r\n        this.eventsEl = React.createRef()\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if (!prevState.isExpanded && this.state.isExpanded) {\r\n            this.scroll()\r\n        }\r\n    }\r\n\r\n    expand = () => {\r\n        this.setState({\r\n            isExpanded: !this.state.isExpanded\r\n        })\r\n    }\r\n\r\n    renderEvent = (event, idx) => (\r\n        <div key={`${event.title}-${idx}`} className=\"event-container\">\r\n            <img alt=\"event for weitp\" src={event.photo}></img>\r\n            <div className=\"event-date\">{event.title}</div>\r\n            <div className=\"event-date\">\r\n                {event.date} @ {event.time}\r\n            </div>\r\n            <div className=\"link\"><a href={event.link}>Register</a></div>\r\n        </div>\r\n    )\r\n\r\n    renderEvents = () => (\r\n        <div className=\"events-container\">\r\n            {EventsList.map(this.renderEvent)}\r\n        </div>\r\n    )\r\n\r\n    renderNavItem = () => (\r\n        <div onClick={this.expand}>\r\n            <NavItem \r\n                navItem={Pages.Events}\r\n                isExpanded={this.state.isExpanded}\r\n            />\r\n        </div>\r\n    )\r\n\r\n    scroll = () => {\r\n        let {offsetTop} = this.eventsEl.current\r\n        window.scrollTo({\r\n            top: offsetTop,\r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div ref={this.eventsEl} className=\"Page\">\r\n                {this.renderNavItem()}\r\n                {this.state.isExpanded ? this.renderEvents() : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nimport '../style/Home.css'\r\nimport {HomeText} from '../constants/text'\r\n\r\nexport default class Home extends React.Component {\r\n    renderSubText = (text) => (\r\n        <div key={text.text} className={`home-subtext ${text.className}`}>{text.text}</div>\r\n    )\r\n\r\n    renderText = (text, idx) => (\r\n        <div key={`home-${idx}`} className={`column ${idx === 0 ? 'first' : 'second'}`}>{text.map(this.renderSubText)}</div>\r\n    )\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"Page\">\r\n                <div className=\"main-text\">\r\n                    {HomeText.map(this.renderText)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nimport '../style/Resources.css'\r\nimport NavItem from './NavItem'\r\nimport {Pages} from '../constants/constants'\r\nimport {ResourcesText} from '../constants/text'\r\n\r\nexport default class Resources extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isExpanded: false\r\n        }\r\n\r\n        this.resourcesEl = React.createRef()\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if (!prevState.isExpanded && this.state.isExpanded) {\r\n            this.scroll()\r\n        }\r\n    }\r\n\r\n    expand = () => {\r\n        this.setState({\r\n            isExpanded: !this.state.isExpanded\r\n        })\r\n    }\r\n\r\n    renderNavItem = () => (\r\n        <div onClick={this.expand}>\r\n            <NavItem \r\n                navItem={Pages.Resources}\r\n                isExpanded={this.state.isExpanded}\r\n            />\r\n        </div>\r\n    )\r\n\r\n    renderResources = () => (\r\n        <div className=\"resources-container\">\r\n            {ResourcesText.map(this.renderText)}\r\n        </div>\r\n    )\r\n\r\n    renderSubText = (text, idx) => (\r\n        <div key={`${text.title}-${idx}`} className=\"resource-text\">\r\n            <div className=\"microheader\">{text.title}</div>\r\n            <div>{text.text}</div>\r\n        </div>\r\n    )\r\n\r\n    renderText = (text, idx) => (\r\n        <div key={`resource-column${idx}`} className={`column column${idx}`}>\r\n            <div className=\"subheader\">{idx === 0 ? 'Resources through NYU' : 'Related Articles'}</div>\r\n            {text.map(this.renderSubText)}\r\n        </div>\r\n    )\r\n\r\n    scroll = () => {\r\n        let {offsetTop} = this.resourcesEl.current\r\n        window.scrollTo({\r\n            top: offsetTop,\r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div ref={this.resourcesEl} className=\"Page\">\r\n                {this.renderNavItem()}\r\n                {this.state.isExpanded ? this.renderResources() : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\n\nimport About from './About'\nimport Contact from './Contact'\nimport Events from './Events'\nimport Home from './Home'\nimport Resources from './Resources'\n\nimport {Pages} from '../constants/constants'\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div data-value={Pages.Home} className=\"logo-container\">\n          <div className=\"logo\" />\n        </div>\n        <Home />\n        <About />\n        <Events />\n        <Resources />\n        <Contact />\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './style/index.css'\nimport './style/animations.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}